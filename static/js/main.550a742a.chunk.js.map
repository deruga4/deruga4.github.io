{"version":3,"sources":["logo.svg","components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TodoItem","getStyle","backgroundColor","padding","borderBottom","textDecoration","_this","props","todo","completed","_this$props$todo","this","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","background","color","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","key","propTypes","PropTypes","object","isRequired","func","headerStyle","textAlign","linkStyle","Header","react_router_dom","to","AddTodo","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","addTodo","inherits","createClass","display","placeholder","flex","className","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","array","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.550a742a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            backgroundColor: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id, title} = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                    <input type='checkbox' onChange={this.props.markComplete.bind(this, id)}/> {' '}\r\n                    {title}\r\n                    <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    Todo:PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Todos extends Component {\r\n    render() {\r\n        return this.props.todos.map((todo) => (\r\n            <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\r\n        ));\r\n    }\r\n}\r\n\r\nTodoItem.propTypes={\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header(){\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>TodoList</h1>\r\n            <Link to='/' style={linkStyle}>Home</Link> | <Link to='/about' style={linkStyle}>About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none',\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class AddTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n    onSubmit = (e) =>{\r\n      e.preventDefault();\r\n      this.props.addTodo(this.state.title);\r\n      this.setState({title: ''});\r\n    }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\r\n          <input \r\n            type='text' \r\n            name='title' \r\n            placeholder='Add Todo ...' \r\n            value={this.state.title} \r\n            onChange={this.onChange}\r\n            style={{flex: '10', padding: '5px'}} />\r\n          <input \r\n            type='submit'\r\n            value='Submit' \r\n            className='btn' \r\n            style={{flex:'1'}} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  addTodo:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>About</h1>\r\n        <p>This is the TodoList app v1.0.0. It is part of a react crash course. It's very bad though.</p>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport Todos from './components/Todos'\nimport PropTypes from 'prop-types'\nimport Header from './components/layout/Header'\nimport AddTodo from './components/AddTodo'\nimport About from './components/pages/About'\nimport uuid from 'uuid'\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({todos: res.data}))\n  }\n\n  markComplete = (id) =>{\n    this.setState({todos: this.state.todos.map(todo => {\n      if (todo.id == id){\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    })});\n  }\n\n  delTodo = (id) =>{\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({todos:[...this.state.todos.filter(todo => todo.id !== id)]}))\n  }\n\n  addTodo = (title) =>{\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n      .then(res => this.setState({todos: [...this.state.todos, res.data]}))\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <div className='container'>\n            <Header/>\n            <Route exact path='/' render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            \n            <Route exact path='/about' component={About} />\n\n          </div>\n        </div>\n        </Router>\n    );\n  }\n}\n\n//PropTypes\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}